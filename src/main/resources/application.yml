spring:
  application:
    name: inbound

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

ws:
  policies:
    /unloading-report: 90
    /forklift-socket: 50
    /yard-man: 70
    /config: 1

---

#server:
#  address: 0.0.0.0
#  port: 8080
#  forward-headers-strategy: framework

server:
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:keystore.p12
    key-store-type: PKCS12
    key-store-password: changeit

spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?reWriteBatchedInserts=true
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      host: localhost
      port: 6379
      password:
      ssl:
        enabled: false
      repositories:
        enabled: false

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate.default_schema: vision_idc
      hibernate.format_sql: true
      hibernate.jdbc.batch_size: 10000
      hibernate.jdbc.batch_versioned_data: true
      hibernate.order_inserts: true
      hibernate.order_updates: true

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

  cache:
    type: redis

app:
  cors:
    allowed-origins:
      - https://localhost:3000

file:
  upload:
    max-size: 104857600
    max-count: 10

logging:
  level:
    root: INFO
    org:
      springframework:
        security: ERROR
        web: ERROR
        security.web: ERROR
        security.web.authentication.AbstractAuthenticationProcessingFilter: OFF
        messaging.simp: DEBUG
        web.socket : DEBUG
  file:
    name: src/main/resources/logs/application.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 5
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health
  server:
    port: 8080

pagination:
  max-page-size: 100

tokenSecret: ${TOKEN_SECRET}

---

server:
  address: 0.0.0.0
  port: 8080
  forward-headers-strategy: framework

spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      ssl:
        enabled: ${REDIS_SSL:true}
      repositories:
        enabled: false

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate.default_schema: vision_idc
      hibernate.format_sql: true
      hibernate.jdbc.batch_size: 10000
      hibernate.jdbc.batch_versioned_data: true
      hibernate.order_inserts: true
      hibernate.order_updates: true

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

  cache:
    type: redis

app:
  cors:
    allowed-origins:
      - https://fiege-vision.com
      - https://www.fiege-vision.com

file:
  upload:
    max-size: 104857600
    max-count: 10

logging:
  level:
    root: INFO
    org:
      springframework:
        security: ERROR
        web: ERROR
        security.web: ERROR
        security.web.authentication.AbstractAuthenticationProcessingFilter: OFF
  file:
    name: src/main/resources/logs/application.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 5
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health
  server:
    port: 8080

pagination:
  max-page-size: 100

tokenSecret: ${TOKEN_SECRET}